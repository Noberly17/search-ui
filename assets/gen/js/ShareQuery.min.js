webpackJsonpCoveo__temporary([35],{209:function(e,o,n){"use strict";var t=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var n in o)o.hasOwnProperty(n)&&(e[n]=o[n])};return function(o,n){function t(){this.constructor=o}e(o,n),o.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}}();Object.defineProperty(o,"__esModule",{value:!0});var r=n(9),i=n(41),s=n(2),a=n(13),l=n(6),c=n(1),u=n(3),p=n(25);n(647);var h=function(e){function o(n,t,r,s){void 0===s&&(s=p.ModalBox);var l=e.call(this,n,o.ID,r)||this;return l.element=n,l.options=t,l.ModalBox=s,l.bind.onRootElement(i.SettingsEvents.settingsPopulateMenu,function(e){e.menuData.push({className:"coveo-share-query",text:a.l("ShareQuery"),onOpen:function(){return l.open()},onClose:function(){return l.close()}})}),l}return t(o,e),o.prototype.open=function(){null==this.modalbox&&(this.dialogBoxContent=this.buildContent(),this.modalbox=this.ModalBox.open(this.dialogBoxContent,{title:a.l("ShareQuery"),className:"coveo-share-query-opened"}))},o.prototype.close=function(){this.modalbox&&(this.modalbox.close(),this.modalbox=null)},o.prototype.getLinkToThisQuery=function(){return this.linkToThisQuery||this.buildLinkToThisQuery(),this.linkToThisQuery.value},o.prototype.setLinkToThisQuery=function(e){this.linkToThisQuery||this.buildLinkToThisQuery(),this.linkToThisQuery.value=e},o.prototype.getCompleteQuery=function(){return this.completeQuery||this.buildCompleteQuery(),this.completeQuery.value},o.prototype.setCompleteQuery=function(e){this.completeQuery||this.buildCompleteQuery(),this.completeQuery.value=e},o.prototype.outputIfNotNull=function(e){return e?"("+e+")":""},o.prototype.buildContent=function(){var e=s.$$("div",{className:"coveo-share-query-summary-info"}).el,o=s.$$("div",{className:"coveo-share-query-summary-info-boxes"}).el;return this.buildLinkToThisQuery(),this.buildCompleteQuery(),o.appendChild(this.buildTextBoxWithLabel(a.l("Link"),this.linkToThisQuery)),o.appendChild(this.buildTextBoxWithLabel(a.l("CompleteQuery"),this.completeQuery)),e.appendChild(o),r.Component.pointElementsToDummyForm(e),e},o.prototype.buildCompleteQuery=function(){this.completeQuery=s.$$("input",{type:"text",className:"coveo-share-query-summary-info-input"}).el;var e=this.queryController.getLastQuery();this.completeQuery.value=l.Utils.trim(this.outputIfNotNull(e.q)+" "+this.outputIfNotNull(e.aq)+" "+this.outputIfNotNull(e.cq))},o.prototype.buildLinkToThisQuery=function(){var e=this;this.linkToThisQuery=s.$$("input",{type:"text",className:"coveo-share-query-summary-info-input"}).el,s.$$(this.linkToThisQuery).on("click",function(){return e.linkToThisQuery.select()}),this.linkToThisQuery.value=window.location.href},o.prototype.buildTextBoxWithLabel=function(e,o){var n=s.$$("span",{className:"coveo-share-query-summary-info-label"});n.text(e);var t=s.$$("div").el;return t.appendChild(n.el),t.appendChild(o),t},o}(r.Component);h.ID="ShareQuery",h.options={},h.doExport=function(){u.exportGlobally({ShareQuery:h})},o.ShareQuery=h,c.Initialization.registerAutoCreateComponent(h)},531:function(e,o,n){o=e.exports=n(11)(),o.push([e.i,"/*\n* @param direction vertical or horizontal\n* @param position type of positioning to apply (relative/absolute)\n*/\n\n/*\n* @param $selector css selector on which to apply the icon. Can be '&' if the icon should be applied on the current element;\n* @param $size size of the icon to use\n*/\n\n.coveo-share-query-summary-info-label {\n  display: block;\n  font-size: 13px;\n  margin-bottom: 5px;\n  font-weight: initial;\n}\n\n.coveo-share-query-summary-info-input {\n  width: 100%;\n  margin-bottom: 5px;\n  border: 1px solid #BCC3CA;\n  border-radius: 2px;\n  padding: 5px;\n  height: 35px;\n  font-size: 14px;\n}\n\n","",{version:3,sources:["/./sass/_Variables.scss","/./sass/_ShareQuery.scss","/./sass/_ShareQuery.scss"],names:[],mappings:"AAoDA;;;ECjDE;;ADoIF;;;EC/HE;;ACNF;EACE,eAAA;EACA,gBAAA;EACA,mBAAA;EACA,qBAAA;CDSD;;ACND;EACE,YAAA;EACA,mBAAA;EFmCA,0BAAA;EACA,mBAAA;EElCA,aAAA;EACA,aAAA;EACA,gBAAA;CDUD",file:"_ShareQuery.scss",sourcesContent:["@import \"bourbon/bourbon\";\n@import \"../bin/sass/sprites.scss\";\n\n// https://app.frontify.com/d/GthysWU8RY0Q/brand-guidelines#/basics/colors\n\n// Corporate Main Colors\n$coveo-orange: #f58020;\n$coveo-blue: #004990;\n\n// Complementary Colors Set 1\n$color-charcoal: #08080E;\n$color-dark-grey: #373737;\n$color-grey: #4F5658;\n$color-greyish-dark-blue: #263E55;\n$color-greyish-teal-blue: #1D4F76;\n$color-blueish-gray: #67768B;\n$color-vibrant-blue: #009ddc;\n\n// Complementary Colors Set 2\n$color-teal: #296896;\n$color-greyish-cyan: #CDDEE9;\n$color-greyish-light-cyan: #CDDEE9;\n$color-light-grey: #BCC3CA;\n$color-blueish-white-grey: #E6ECf0;\n$color-blueish-white: #F7F8F9;\n\n// Coveo Partners Colors\n$color-coveo-for-sitecore: #DC291E;\n$color-coveo-for-salesforce: #009DDC;\n\n$color-green: #4caf50;\n$color-transparent-background: rgba(28, 79, 118, 0.9);\n\n// Font sizes\n$font-size-huge: 24px;\n$font-size-biggest: 18px;\n$font-size-bigger: 16px;\n$font-size-regular: 15px;\n$font-size-smaller: 14px;\n$font-size-smallest: 12px;\n\n// Border\n$default-border-radius: 2px;\n$small-border-radius: 1px;\n$default-border: 1px solid $color-light-grey;\n@mixin defaultRoundedBorder {\n  border: $default-border;\n  border-radius: $default-border-radius;\n}\n\n$standard-transition-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);\n\n/*\n* @param direction vertical or horizontal\n* @param position type of positioning to apply (relative/absolute)\n*/\n@mixin align($direction: 'vertical', $position: relative) {\n  position: $position;\n  @if $direction == 'vertical' {\n    top: 50%;\n    @include transform(translateY(-50%));\n  } @else {\n    left: 50%;\n    @include transform(translateX(-50%));\n  }\n}\n\n@mixin hoverEffectForDropdown($target: '&') {\n  @include clickable();\n  cursor: pointer;\n  #{$target} {\n    background: white;\n  }\n\n  #{$target}:hover {\n    background: $color-blueish-white-grey;\n  }\n}\n\n@mixin iconWithHoverState($iconBase, $float:'left', $inactive : 'coveo-disabled') {\n  $iconActive: '#{$iconBase}-active';\n  .coveo-icon {\n    @include retina-sprite(map-get($retina-group-map, $iconBase));\n    float: #{$float};\n  }\n  &:hover {\n    .coveo-icon {\n      @include retina-sprite(map-get($retina-group-map, $iconActive));\n    }\n  }\n  &:hover.#{$inactive} {\n    .coveo-icon {\n      @include retina-sprite(map-get($retina-group-map, $iconBase));\n    }\n  }\n}\n\n@mixin clickable($dark-background: false) {\n  color: $color-teal;\n  @if $dark-background == true {\n    color: $color-coveo-for-salesforce;\n  }\n  text-decoration: none;\n  cursor: pointer;\n  &:hover, &:visited {\n    text-decoration: none;\n    @if $dark-background == false {\n      color: $color-greyish-dark-blue;\n    } @else {\n      color: $color-coveo-for-salesforce;\n    }\n  }\n  &:hover, &:hover a {\n    text-decoration: underline;\n  }\n  &.coveo-selected * {\n    @if $dark-background == false {\n      color: $color-greyish-dark-blue;\n    } @else {\n      color: $color-coveo-for-salesforce;\n    }\n  }\n}\n\n@mixin clickableVibrant($dark-background: false) {\n  @include clickable($dark-background);\n  color: $color-coveo-for-salesforce;\n  &:hover {\n    color: $color-coveo-for-salesforce;\n  }\n  &.coveo-selected * {\n    color: $color-coveo-for-salesforce;\n  }\n}\n\n/*\n* @param $selector css selector on which to apply the icon. Can be '&' if the icon should be applied on the current element;\n* @param $size size of the icon to use\n*/\n@mixin clearButton($selector, $size:'normal') {\n  cursor: pointer;\n  $icon: '.coveo-sprites-clear-inactive-filters';\n  $icon-clear: '.coveo-sprites-clear-active-filters';\n\n  @if $size == 'smaller' {\n    $icon: '.coveo-sprites-facet-exclusion-hover';\n    $icon-clear: '.coveo-sprites-facet-checkbox-exclusion';\n  } @else if $size == 'smallest' {\n    $icon: '.coveo-sprites-facet-exclusion-hover';\n    $icon-clear: '.coveo-sprites-facet-checkbox-exclusion';\n  } @else if $size == 'bigger' {\n    $icon: '.coveo-sprites-main-clear';\n    $icon-clear: '.coveo-sprites-main-clear-hover'; //TODO icon not exported yet\n  }\n\n  #{$selector} {\n    @include retina-sprite(map-get($retina-group-map, $icon));\n  }\n  &:hover {\n    #{$selector} {\n      @include retina-sprite(map-get($retina-group-map, $icon-clear))\n    }\n  }\n}\n\n@mixin breadcrumbTitle {\n  color: $color-blueish-gray;\n  margin-right: 14px;\n}\n\n@mixin coveo-email-to-and-from {\n  font-size: 13px;\n  a {\n    @include clickable();\n    white-space: nowrap;\n  }\n}\n","/*\n* @param direction vertical or horizontal\n* @param position type of positioning to apply (relative/absolute)\n*/\n\n/*\n* @param $selector css selector on which to apply the icon. Can be '&' if the icon should be applied on the current element;\n* @param $size size of the icon to use\n*/\n\n.coveo-share-query-summary-info-label {\n  display: block;\n  font-size: 13px;\n  margin-bottom: 5px;\n  font-weight: initial;\n}\n\n.coveo-share-query-summary-info-input {\n  width: 100%;\n  margin-bottom: 5px;\n  border: 1px solid #BCC3CA;\n  border-radius: 2px;\n  padding: 5px;\n  height: 35px;\n  font-size: 14px;\n}\n\n",'@import "Variables";\n\n.coveo-share-query-summary-info-label {\n  display: block;\n  font-size: 13px;\n  margin-bottom: 5px;\n  font-weight: initial;\n}\n\n.coveo-share-query-summary-info-input {\n  width: 100%;\n  margin-bottom: 5px;\n  @include defaultRoundedBorder();\n  padding: 5px;\n  height: 35px;\n  font-size: $font-size-smaller;\n}\n'],sourceRoot:"webpack://"}])},647:function(e,o,n){var t=n(531);"string"==typeof t&&(t=[[e.i,t,""]]);n(12)(t,{publicPath:""});t.locals&&(e.exports=t.locals)}});