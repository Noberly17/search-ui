{"version":3,"sources":["./src/ui/Templates/TemplateList.ts","./src/ui/ResultAttachments/ResultAttachments.ts","./src/ui/ResultAttachments/DefaultResultAttachmentTemplate.ts","./sass/_ResultAttachments.scss","./src/ui/Base/TemplateComponentOptions.ts"],"names":[],"mappings":"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","file":"ResultAttachments__588b7f3b61feff5b09f4.js","sourcesContent":["import { Template, IInstantiateTemplateOptions, DefaultInstantiateTemplateOptions } from './Template';\nimport { DefaultResultTemplate } from './DefaultResultTemplate';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Assert } from '../../misc/Assert';\nimport * as _ from 'underscore';\n\nexport class TemplateList extends Template {\n  constructor(public templates: Template[]) {\n    super();\n    Assert.exists(templates);\n  }\n\n  instantiateToString(object: IQueryResult, instantiateOptions: IInstantiateTemplateOptions = {}): string {\n    let merged = new DefaultInstantiateTemplateOptions().merge(instantiateOptions);\n\n    const filteredTemplates = _.reject(this.templates, t => t.role != null);\n    for (var i = 0; i < filteredTemplates.length; i++) {\n      var result = filteredTemplates[i].instantiateToString(object, merged);\n      if (result != null) {\n        return result;\n      }\n    }\n    return this.getFallbackTemplate().instantiateToString(object, instantiateOptions);\n  }\n\n  instantiateToElement(object: IQueryResult, instantiateOptions: IInstantiateTemplateOptions = {}): Promise<HTMLElement> {\n    let merged = new DefaultInstantiateTemplateOptions().merge(instantiateOptions);\n\n    const filteredTemplates = _.reject(this.templates, t => t.role != null);\n    for (var i = 0; i < filteredTemplates.length; i++) {\n      var promiseOfHTMLElement = filteredTemplates[i].instantiateToElement(object, merged);\n      if (promiseOfHTMLElement != null) {\n        return promiseOfHTMLElement;\n      }\n    }\n    return this.getFallbackTemplate().instantiateToElement(object, merged);\n  }\n\n  getFields() {\n    return _.reduce(this.templates, (fields: string[], template: Template) => fields.concat(template.getFields()), []);\n  }\n\n  getType() {\n    return 'TemplateList';\n  }\n\n  protected getFallbackTemplate(): Template {\n    return new DefaultResultTemplate();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Templates/TemplateList.ts","import { Template } from '../Templates/Template';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { DefaultResultAttachmentTemplate } from './DefaultResultAttachmentTemplate';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Utils } from '../../utils/Utils';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { Initialization, IInitializationParameters } from '../Base/Initialization';\nimport { Assert } from '../../misc/Assert';\nimport { $$ } from '../../utils/Dom';\nimport * as _ from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nimport 'styling/_ResultAttachments';\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\n\nexport interface IResultAttachmentsOptions {\n  resultTemplate?: Template;\n  subResultTemplate?: Template;\n  maximumAttachmentLevel?: number;\n}\n\n/**\n * The `ResultAttachments` component renders attachments in a result set, for example when displaying emails. This\n * component is usable inside a result template when there is an active [`Folding`]{@link Folding} component in the\n * page.\n *\n * This component is a result template component (see [Result Templates](https://developers.coveo.com/x/aIGfAQ)).\n * @notSupportedIn salesforcefree\n */\nexport class ResultAttachments extends Component {\n  static ID = 'ResultAttachments';\n\n  static doExport = () => {\n    exportGlobally({\n      ResultAttachments: ResultAttachments,\n      DefaultResultAttachmentTemplate: DefaultResultAttachmentTemplate\n    });\n  };\n\n  /**\n   * The options for the component\n   * @componentOptions\n   */\n  static options: IResultAttachmentsOptions = {\n    /**\n     * Specifies the template to use to render each attachment for a top result.\n     *\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n     * CSS selector (see {@link TemplateCache}).\n     *\n     * **Examples:**\n     *\n     * Specifying a previously registered template by referring to its HTML `id` attribute:\n     *\n     * ```html\n     * <div class=\"CoveoResultAttachments\" data-result-template-id=\"Foo\"></div>\n     * ```\n     *\n     * Specifying a previously registered template by referring to a CSS selector:\n     *\n     * ```html\n     * <div class='CoveoResultAttachments' data-result-template-selector=\".Foo\"></div>\n     * ```\n     *\n     * If you do not specify a custom folding template, the component uses the default result attachment template.\n     */\n    resultTemplate: TemplateComponentOptions.buildTemplateOption({\n      defaultFunction: e => new DefaultResultAttachmentTemplate()\n    }),\n\n    /**\n     * Specifies the template to use to render sub-attachments, which are attachments within attachments, for example\n     * when multiple files are embedded within a `.zip` attachment.\n     *\n     * Sub-attachments can themselves contain sub-attachments, and so on up to a certain level (see the\n     * [`maximumAttachmentLevel`]{@link ResultAttachments.options.maximumAttachmentLevel} option).\n     *\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n     * CSS selector (see {@link TemplateCache}).\n     *\n     * **Example:**\n     *\n     * Specifying a previously registered template by referring to its HTML `id` attribute:\n     *\n     * ```html\n     * <div class=\"CoveoResultAttachments\" data-sub-result-template-id=\"Foo\"></div>\n     * ```\n     *\n     * Specifying a previously registered template by referring to a CSS selector:\n     *\n     * ```html\n     * <div class=\"CoveoResultAttachments\" data-sub-result-template-selector=\".Foo\"></div>\n     * ```\n     *\n     * By default, this option uses the same template you specify for the\n     * [`resultTemplate`]{@link ResultAttachments.options.resultTemplate} option.\n     */\n    subResultTemplate: TemplateComponentOptions.buildTemplateOption({\n      postProcessing: (value: Template, options: IResultAttachmentsOptions) => (value != null ? value : options.resultTemplate)\n    }),\n\n    /**\n     * Specifies the maximum nesting depth. Beyond this depth, the component stops rendering sub-attachments.\n     *\n     * Default value is `5`. Minimum value is `0`.\n     */\n    maximumAttachmentLevel: ComponentOptions.buildNumberOption({ defaultValue: 5, min: 0 })\n  };\n\n  private attachments: IQueryResult[];\n\n  /**\n   * Creates a new `ResultAttachments` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `ResultAttachments` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param attachmentLevel The nesting depth.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IResultAttachmentsOptions,\n    public bindings?: IComponentBindings,\n    result?: IQueryResult,\n    public attachmentLevel = 0\n  ) {\n    super(element, ResultAttachments.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, ResultAttachments, options);\n\n    this.attachments = result.attachments;\n    if (Utils.isNonEmptyArray(this.attachments)) {\n      this.renderAttachments();\n    }\n  }\n\n  private renderAttachments() {\n    _.each(this.attachments, attachment => {\n      QueryUtils.setStateObjectOnQueryResult(this.queryStateModel.get(), attachment);\n      QueryUtils.setSearchInterfaceObjectOnQueryResult(this.searchInterface, attachment);\n      let subTemplatePromise =\n        this.attachmentLevel > 0\n          ? this.options.subResultTemplate.instantiateToElement(attachment)\n          : this.options.resultTemplate.instantiateToElement(attachment);\n\n      subTemplatePromise.then((container: HTMLElement) => {\n        this.autoCreateComponentsInsideResult(container, _.extend({}, attachment, { attachments: [] }));\n\n        $$(container).addClass('coveo-result-attachments-container');\n        this.element.appendChild(container);\n\n        if (this.attachmentHasSubAttachment(attachment) && this.attachmentLevel < this.options.maximumAttachmentLevel) {\n          var childAttachmentContainer = $$('div').el;\n          container.appendChild(childAttachmentContainer);\n          new ResultAttachments(childAttachmentContainer, this.options, this.bindings, attachment, this.attachmentLevel + 1);\n        }\n      });\n    });\n  }\n\n  private attachmentHasSubAttachment(attachment: IQueryResult) {\n    if (Utils.isNonEmptyArray(attachment.attachments)) {\n      return true;\n    } else if (Utils.isNonEmptyArray(attachment.childResults)) {\n      attachment.attachments = attachment.childResults;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private autoCreateComponentsInsideResult(element: HTMLElement, result: IQueryResult) {\n    Assert.exists(element);\n    var initOptions = this.searchInterface.options;\n    var initParameters: IInitializationParameters = {\n      options: initOptions,\n      bindings: this.getBindings(),\n      result: result\n    };\n    Initialization.automaticallyCreateComponentsInside(element, initParameters, [ResultAttachments.ID]);\n  }\n}\n\nInitialization.registerAutoCreateComponent(ResultAttachments);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultAttachments/ResultAttachments.ts","import { Template } from '../Templates/Template';\nimport { IQueryResult } from '../../rest/QueryResult';\n\nexport class DefaultResultAttachmentTemplate extends Template {\n  constructor() {\n    super();\n  }\n\n  instantiateToString(queryResult?: IQueryResult): string {\n    return '<div><span class=\"CoveoIcon\"></span> <a class=\"CoveoResultLink\"></a> <span class=\"CoveoQuickview\"></span></div>';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultAttachments/DefaultResultAttachmentTemplate.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_ResultAttachments.scss\n// module id = 411\n// module chunks = 21 73","import { TemplateCache } from '../Templates/TemplateCache';\nimport { TemplateList } from '../Templates/TemplateList';\nimport { UnderscoreTemplate } from '../Templates/UnderscoreTemplate';\nimport { HtmlTemplate } from '../Templates/HtmlTemplate';\nimport { Template } from '../Templates/Template';\nimport { IComponentOptions, IComponentOptionsOption, ComponentOptions, ComponentOptionsType } from './ComponentOptions';\nimport { Assert } from '../../misc/Assert';\nimport { Utils } from '../../utils/Utils';\nimport { compact, indexOf } from 'underscore';\n\nexport interface IComponentOptionsTemplateOptionArgs extends IComponentOptions<Template> {\n  /**\n   * Specifies the CSS selector the template must match. The first matching element in the page is used as the template\n   * option value, if this element is a valid template.\n   *\n   * If specified, this parameter takes precedence over [`idAttr`]{@link IComponentOptionsTemplateOptionArgs.idAttr}.\n   */\n  selectorAttr?: string;\n\n  /**\n   * Specifies the CSS selector the templates must match. The list of all matching, valid elements in the page is used\n   * as the template option value.\n   *\n   * Default value is `.`, followed by the hyphened name of the template option being configured (e.g.,\n   * `.content-template`, `.result-template`, `.sub-result-template`, `.preview-template`, etc.).\n   */\n  childSelector?: string;\n\n  /**\n   * Specifies the HTML `id` attribute the template must match. The corresponding template must be registered in\n   * the [`TemplateCache`]{@link TemplateCache} to be usable as the template option value.\n   *\n   * If specified, this parameter takes precedence over\n   * [`childSelector`]{@link IComponentOptionsTemplateOptionArgs.childSelector}.\n   */\n  idAttr?: string;\n}\n\nexport interface IComponentOptionsTemplateOption extends IComponentOptionsOption<Template>, IComponentOptionsTemplateOptionArgs {}\n\nexport class TemplateComponentOptions {\n  /**\n   * Builds a template option.\n   *\n   * The option accepts a CSS selector matching a valid template. This selector can either be a class, or an ID\n   * selector.\n   *\n   * When building a template option using an ID selector, the matching template must be registered in the\n   * [`TemplateCache`]{@link TemplateCache}, however.\n   *\n   * **Markup Examples:**\n   *\n   * > `data-foo-id=\"#bar\"`\n   *\n   * > `data-foo-selector=\".bar\"`\n   *\n   * @param optionArgs The arguments to apply when building the option.\n   * @returns {Template} The resulting option value.\n   */\n  static buildTemplateOption(optionArgs?: IComponentOptionsTemplateOptionArgs): Template {\n    return ComponentOptions.buildOption<Template>(ComponentOptionsType.TEMPLATE, TemplateComponentOptions.loadTemplateOption, optionArgs);\n  }\n\n  static loadTemplateOption(\n    element: HTMLElement,\n    name: string,\n    option: IComponentOptionsTemplateOption,\n    doc: Document = document\n  ): Template {\n    let template: Template;\n\n    // Attribute: template selector\n    const selectorAttr = option.selectorAttr || ComponentOptions.attrNameFromName(name, option) + '-selector';\n    const selector = element.getAttribute(selectorAttr) || ComponentOptions.getAttributeFromAlias(element, option);\n    if (selector != null) {\n      const templateElement = <HTMLElement>doc.querySelector(selector);\n      if (templateElement != null) {\n        template = TemplateComponentOptions.createResultTemplateFromElement(templateElement);\n      }\n    }\n    // Attribute: template id\n    if (template == null) {\n      const idAttr = option.idAttr || ComponentOptions.attrNameFromName(name, option) + '-id';\n      const id = element.getAttribute(idAttr) || ComponentOptions.getAttributeFromAlias(element, option);\n      if (id != null) {\n        template = TemplateComponentOptions.loadResultTemplateFromId(id);\n      }\n    }\n    // Child\n    if (template == null) {\n      let childSelector = option.childSelector;\n      if (childSelector == null) {\n        childSelector = '.' + name.replace(/([A-Z])/g, '-$1').toLowerCase();\n      }\n      template = TemplateComponentOptions.loadChildrenResultTemplateFromSelector(element, childSelector);\n    }\n    return template;\n  }\n\n  static createResultTemplateFromElement(element: HTMLElement): Template {\n    Assert.exists(element);\n    const type = element.getAttribute('type');\n    const mimeTypes =\n      'You must specify the type of template. Valid values are:' +\n      ' ' +\n      UnderscoreTemplate.mimeTypes.toString() +\n      ' ' +\n      HtmlTemplate.mimeTypes.toString();\n    Assert.check(Utils.isNonEmptyString(type), mimeTypes);\n\n    if (indexOf(UnderscoreTemplate.mimeTypes, type.toLowerCase()) != -1) {\n      return UnderscoreTemplate.create(element);\n    } else if (indexOf(HtmlTemplate.mimeTypes, type.toLowerCase()) != -1) {\n      return new HtmlTemplate(element);\n    } else {\n      Assert.fail('Cannot guess template type from attribute: ' + type + '. Valid values are ' + mimeTypes);\n      return undefined;\n    }\n  }\n\n  static loadResultTemplateFromId(templateId: string): Template {\n    return Utils.isNonEmptyString(templateId) ? TemplateCache.getTemplate(templateId) : null;\n  }\n\n  static loadChildrenResultTemplateFromSelector(element: HTMLElement, selector: string): Template {\n    const foundElements = ComponentOptions.loadChildrenHtmlElementFromSelector(element, selector);\n    if (foundElements.length > 0) {\n      return new TemplateList(compact(foundElements.map(element => TemplateComponentOptions.createResultTemplateFromElement(element))));\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Base/TemplateComponentOptions.ts"],"sourceRoot":""}