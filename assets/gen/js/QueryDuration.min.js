webpackJsonpCoveo__temporary([40],{196:function(n,e,o){"use strict";var r=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var o in e)e.hasOwnProperty(o)&&(n[o]=e[o])};return function(e,o){function r(){this.constructor=e}n(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0});var t=o(9),i=o(10),a=o(14),s=o(8),c=o(2),l=o(13),u=o(1),p=o(26),d=o(3);o(632);var f=function(n){function e(o,r,t){var s=n.call(this,o,e.ID,t)||this;return s.element=o,s.options=r,s.options=i.ComponentOptions.initComponentOptions(o,e,r),s.bind.onRootElement(a.QueryEvents.querySuccess,function(n){return s.handleQuerySuccess(n)}),s.bind.onRootElement(a.QueryEvents.queryError,function(){return c.$$(s.element).hide()}),s.element.style.display="none",s.textContainer=c.$$("span").el,s.element.appendChild(s.textContainer),s}return r(e,n),e.prototype.handleQuerySuccess=function(n){if(!this.disabled&&n.results.results.length>0){s.Assert.exists(n);var e=[l.l("Duration",this.formatQueryDuration(n.results.clientDuration)),l.l("IndexDuration",this.formatQueryDuration(n.results.duration)),l.l("ProxyDuration",this.formatQueryDuration(n.results.proxyDuration)),l.l("ClientDuration",this.formatQueryDuration(n.results.clientDuration))].join("\n");this.textContainer.textContent=this.formatQueryDuration(n.results.clientDuration),this.element.setAttribute("title",e),this.element.style.display="inline"}else this.element.style.display="none"},e.prototype.formatQueryDuration=function(n){if(void 0==n)return l.l("Unavailable");var e=Math.max(n/1e3,.01);return"en"===String.locale?l.l("Seconds",p.format(e,"n2"),e,!0):l.l("Seconds",p.format(e,"n2"),e)},e}(t.Component);f.ID="QueryDuration",f.doExport=function(){d.exportGlobally({QueryDuration:f})},f.options={},e.QueryDuration=f,u.Initialization.registerAutoCreateComponent(f)},516:function(n,e,o){e=n.exports=o(11)(),e.push([n.i,"/*\n* @param direction vertical or horizontal\n* @param position type of positioning to apply (relative/absolute)\n*/\n\n/*\n* @param $selector css selector on which to apply the icon. Can be '&' if the icon should be applied on the current element;\n* @param $size size of the icon to use\n*/\n\n.CoveoQueryDuration {\n  color: #67768B;\n}\n\n","",{version:3,sources:["/./sass/_Variables.scss","/./sass/_QueryDuration.scss","/./sass/_QueryDuration.scss"],names:[],mappings:"AAoDA;;;ECjDE;;ADoIF;;;EC/HE;;ACNF;EACE,eAAA;CDSD",file:"_QueryDuration.scss",sourcesContent:["@import \"bourbon/bourbon\";\n@import \"../bin/sass/sprites.scss\";\n\n// https://app.frontify.com/d/GthysWU8RY0Q/brand-guidelines#/basics/colors\n\n// Corporate Main Colors\n$coveo-orange: #f58020;\n$coveo-blue: #004990;\n\n// Complementary Colors Set 1\n$color-charcoal: #08080E;\n$color-dark-grey: #373737;\n$color-grey: #4F5658;\n$color-greyish-dark-blue: #263E55;\n$color-greyish-teal-blue: #1D4F76;\n$color-blueish-gray: #67768B;\n$color-vibrant-blue: #009ddc;\n\n// Complementary Colors Set 2\n$color-teal: #296896;\n$color-greyish-cyan: #CDDEE9;\n$color-greyish-light-cyan: #CDDEE9;\n$color-light-grey: #BCC3CA;\n$color-blueish-white-grey: #E6ECf0;\n$color-blueish-white: #F7F8F9;\n\n// Coveo Partners Colors\n$color-coveo-for-sitecore: #DC291E;\n$color-coveo-for-salesforce: #009DDC;\n\n$color-green: #4caf50;\n$color-transparent-background: rgba(28, 79, 118, 0.9);\n\n// Font sizes\n$font-size-huge: 24px;\n$font-size-biggest: 18px;\n$font-size-bigger: 16px;\n$font-size-regular: 15px;\n$font-size-smaller: 14px;\n$font-size-smallest: 12px;\n\n// Border\n$default-border-radius: 2px;\n$small-border-radius: 1px;\n$default-border: 1px solid $color-light-grey;\n@mixin defaultRoundedBorder {\n  border: $default-border;\n  border-radius: $default-border-radius;\n}\n\n$standard-transition-timing-function: cubic-bezier(0.4, 0.0, 0.2, 1);\n\n/*\n* @param direction vertical or horizontal\n* @param position type of positioning to apply (relative/absolute)\n*/\n@mixin align($direction: 'vertical', $position: relative) {\n  position: $position;\n  @if $direction == 'vertical' {\n    top: 50%;\n    @include transform(translateY(-50%));\n  } @else {\n    left: 50%;\n    @include transform(translateX(-50%));\n  }\n}\n\n@mixin hoverEffectForDropdown($target: '&') {\n  @include clickable();\n  cursor: pointer;\n  #{$target} {\n    background: white;\n  }\n\n  #{$target}:hover {\n    background: $color-blueish-white-grey;\n  }\n}\n\n@mixin iconWithHoverState($iconBase, $float:'left', $inactive : 'coveo-disabled') {\n  $iconActive: '#{$iconBase}-active';\n  .coveo-icon {\n    @include retina-sprite(map-get($retina-group-map, $iconBase));\n    float: #{$float};\n  }\n  &:hover {\n    .coveo-icon {\n      @include retina-sprite(map-get($retina-group-map, $iconActive));\n    }\n  }\n  &:hover.#{$inactive} {\n    .coveo-icon {\n      @include retina-sprite(map-get($retina-group-map, $iconBase));\n    }\n  }\n}\n\n@mixin clickable($dark-background: false) {\n  color: $color-teal;\n  @if $dark-background == true {\n    color: $color-coveo-for-salesforce;\n  }\n  text-decoration: none;\n  cursor: pointer;\n  &:hover, &:visited {\n    text-decoration: none;\n    @if $dark-background == false {\n      color: $color-greyish-dark-blue;\n    } @else {\n      color: $color-coveo-for-salesforce;\n    }\n  }\n  &:hover, &:hover a {\n    text-decoration: underline;\n  }\n  &.coveo-selected * {\n    @if $dark-background == false {\n      color: $color-greyish-dark-blue;\n    } @else {\n      color: $color-coveo-for-salesforce;\n    }\n  }\n}\n\n@mixin clickableVibrant($dark-background: false) {\n  @include clickable($dark-background);\n  color: $color-coveo-for-salesforce;\n  &:hover {\n    color: $color-coveo-for-salesforce;\n  }\n  &.coveo-selected * {\n    color: $color-coveo-for-salesforce;\n  }\n}\n\n/*\n* @param $selector css selector on which to apply the icon. Can be '&' if the icon should be applied on the current element;\n* @param $size size of the icon to use\n*/\n@mixin clearButton($selector, $size:'normal') {\n  cursor: pointer;\n  $icon: '.coveo-sprites-clear-inactive-filters';\n  $icon-clear: '.coveo-sprites-clear-active-filters';\n\n  @if $size == 'smaller' {\n    $icon: '.coveo-sprites-facet-exclusion-hover';\n    $icon-clear: '.coveo-sprites-facet-checkbox-exclusion';\n  } @else if $size == 'smallest' {\n    $icon: '.coveo-sprites-facet-exclusion-hover';\n    $icon-clear: '.coveo-sprites-facet-checkbox-exclusion';\n  } @else if $size == 'bigger' {\n    $icon: '.coveo-sprites-main-clear';\n    $icon-clear: '.coveo-sprites-main-clear-hover'; //TODO icon not exported yet\n  }\n\n  #{$selector} {\n    @include retina-sprite(map-get($retina-group-map, $icon));\n  }\n  &:hover {\n    #{$selector} {\n      @include retina-sprite(map-get($retina-group-map, $icon-clear))\n    }\n  }\n}\n\n@mixin breadcrumbTitle {\n  color: $color-blueish-gray;\n  margin-right: 14px;\n}\n\n@mixin coveo-email-to-and-from {\n  font-size: 13px;\n  a {\n    @include clickable();\n    white-space: nowrap;\n  }\n}\n","/*\n* @param direction vertical or horizontal\n* @param position type of positioning to apply (relative/absolute)\n*/\n\n/*\n* @param $selector css selector on which to apply the icon. Can be '&' if the icon should be applied on the current element;\n* @param $size size of the icon to use\n*/\n\n.CoveoQueryDuration {\n  color: #67768B;\n}\n\n",'@import "Variables";\n\n.CoveoQueryDuration {\n  color: $color-blueish-gray;\n}'],sourceRoot:"webpack://"}])},632:function(n,e,o){var r=o(516);"string"==typeof r&&(r=[[n.i,r,""]]);o(12)(r,{publicPath:""});r.locals&&(n.exports=r.locals)}});