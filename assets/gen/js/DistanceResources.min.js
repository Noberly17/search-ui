webpackJsonpCoveo__temporary([14],{280:function(t,o,e){"use strict";(function(t){var i=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var e in o)o.hasOwnProperty(e)&&(t[e]=o[e])};return function(o,e){function i(){this.constructor=o}t(o,e),o.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}();Object.defineProperty(o,"__esModule",{value:!0});var n=e(3),s=e(475),r=e(12),u=e(8),l=e(9),a=e(99),c=e(2),p=e(34),d=e(4),g=e(476),f=e(477),h=e(478),v=function(o){function e(t,i,n){var s=o.call(this,t,e.ID,n)||this;return s.element=t,s.options=i,s.bindings=n,s.isPositionSet=!1,s.options=l.ComponentOptions.initComponentOptions(t,e,i),s.registerDistanceQuery(),s.bind.onRootElement(a.InitializationEvents.afterComponentsInitialization,function(){return s.onAfterComponentsInitialization()}),s}return i(e,o),e.prototype.setPosition=function(t,o){this.latitude=t,this.longitude=o;var e={position:{latitude:t,longitude:o}};this.bind.trigger(this.element,s.DistanceEvents.onPositionResolved,e);var i=this.shouldTriggerQueryWhenPositionSet();this.isPositionSet=!0,i&&(this.usageAnalytics.logSearchEvent(r.analyticsActionCauseList.positionSet,{}),this.queryController.executeQuery())},e.prototype.shouldTriggerQueryWhenPositionSet=function(){var t=this.options.cancelQueryUntilPositionResolved&&!this.isPositionSet;return this.options.triggerNewQueryOnNewPosition||t},e.prototype.getLastPositionRequest=function(){return this.lastPositionRequest||t.reject("No position request was executed yet.")},e.prototype.onAfterComponentsInitialization=function(){var t=this,o={providers:this.getProvidersFromOptions()};this.bind.trigger(this.element,s.DistanceEvents.onResolvingPosition,o),this.lastPositionRequest=this.tryGetPositionFromProviders(o.providers).then(function(o){return o?t.setPosition(o.latitude,o.longitude):t.triggerDistanceNotSet(),o}).catch(function(o){t.logger.error("An error occurred while trying to resolve the current position.",o),t.triggerDistanceNotSet()})},e.prototype.getProvidersFromOptions=function(){var t=[];return this.options.useNavigator&&t.push(new g.NavigatorPositionProvider),this.options.googleApiKey&&t.push(new f.GoogleApiPositionProvider(this.options.googleApiKey)),this.options.longitudeValue&&this.options.latitudeValue&&t.push(new h.StaticPositionProvider(this.options.latitudeValue,this.options.longitudeValue)),t},e.prototype.tryGetPositionFromProviders=function(o){var e=this;return new t(function(t,i){var n=function(){if(o.length>0){o.shift().getPosition().then(function(o){o.latitude&&o.longitude?t(o):n()}).catch(function(t){e.logger.warn("An error occurred while trying to resolve the position within a position provider.",t),n()})}else t()};n()})},e.prototype.triggerDistanceNotSet=function(){this.isPositionSet=!1,this.logger.warn("None of the given position providers could resolve the current position. The distance field will not be calculated and the distance components will be disabled until the next call to 'setPosition'."),this.bind.trigger(this.element,s.DistanceEvents.onPositionNotResolved,{})},e.prototype.registerDistanceQuery=function(){var t=this;this.bind.onRootElement(a.QueryEvents.buildingQuery,function(o){if(t.isPositionSet){if(o&&o.queryBuilder){var e={function:t.getConvertedUnitsFunction("dist("+t.options.latitudeField+", "+t.options.longitudeField+", "+t.latitude+", "+t.longitude+")"),fieldName:""+t.options.distanceField};o.queryBuilder.queryFunctions.push(e),t.enableDistanceComponents()}}else t.options.cancelQueryUntilPositionResolved&&(t.logger.info("Query cancelled, waiting for position."),o.cancel=!0)})},e.prototype.enableDistanceComponents=function(){var t=this;n.$$(this.root).findAll("."+this.options.disabledDistanceCssClass).forEach(function(o){try{o.classList.remove(t.options.disabledDistanceCssClass);var e=p.get(o);e&&e.enable()}catch(e){t.logger.error("Could not re-enable distance component.",e,o)}})},e.prototype.getConvertedUnitsFunction=function(t){return t+"/"+this.options.unitConversionFactor},e.ID="DistanceResources",e.doExport=function(){d.exportGlobally({DistanceResources:e})},e.options={distanceField:l.ComponentOptions.buildFieldOption({required:!0}),latitudeField:l.ComponentOptions.buildFieldOption({required:!0}),longitudeField:l.ComponentOptions.buildFieldOption({required:!0}),unitConversionFactor:l.ComponentOptions.buildNumberOption({defaultValue:1e3,validator:function(t){return!!t&&t>0}}),disabledDistanceCssClass:l.ComponentOptions.buildStringOption({defaultValue:"coveo-distance-disabled"}),latitudeValue:l.ComponentOptions.buildNumberOption({float:!0}),longitudeValue:l.ComponentOptions.buildNumberOption({float:!0}),googleApiKey:l.ComponentOptions.buildStringOption(),useNavigator:l.ComponentOptions.buildBooleanOption(),triggerNewQueryOnNewPosition:l.ComponentOptions.buildBooleanOption({defaultValue:!1}),cancelQueryUntilPositionResolved:l.ComponentOptions.buildBooleanOption({defaultValue:!0})},e}(u.Component);o.DistanceResources=v,c.Initialization.registerAutoCreateComponent(v)}).call(o,e(5))},475:function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=function(){function t(){}return t.onPositionResolved="onPositionResolved",t.onResolvingPosition="onResolvingPosition",t.onPositionNotResolved="onPositionNotResolved",t}();o.DistanceEvents=i},476:function(t,o,e){"use strict";(function(t){Object.defineProperty(o,"__esModule",{value:!0});var e=function(){function o(){}return o.prototype.getPosition=function(){return new t(function(t,o){navigator.geolocation.getCurrentPosition(function(o){t({latitude:o.coords.latitude,longitude:o.coords.longitude})},function(t){o(t)})})},o}();o.NavigatorPositionProvider=e}).call(o,e(5))},477:function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var i=e(61),n=function(){function t(t){this.googleApiKey=t}return t.prototype.getPosition=function(){return(new i.EndpointCaller).call({errorsAsSuccess:!1,method:"POST",queryString:["key="+this.googleApiKey],requestData:{},responseType:"json",url:"https://www.googleapis.com/geolocation/v1/geolocate"}).then(function(t){var o=t.data.location;return{longitude:o.lng,latitude:o.lat}})},t}();o.GoogleApiPositionProvider=n},478:function(t,o,e){"use strict";(function(t){Object.defineProperty(o,"__esModule",{value:!0});var e=function(){function o(t,o){this.latitude=t,this.longitude=o}return o.prototype.getPosition=function(){return t.resolve({longitude:this.longitude,latitude:this.latitude})},o}();o.StaticPositionProvider=e}).call(o,e(5))}});